openapi: 3.0.0
info:
  title: Legal Advice
  contact: {}
  version: '1.0'
servers:
- url: https://community-apis-1812.onrender.com/api/v1
  variables: {}
- url: http://localhost:1812/api/v1
  variables: {}
paths:
  /user/signup:
    post:
      tags:
      - User
      summary: Signup
      operationId: Signup
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SignupRequest'
              - example:
                  name: Test
                  email: test@gmail.com
                  password: '123456'
            example:
              name: Test
              email: test@gmail.com
              password: '123456'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /user/login:
    post:
      tags:
      - User
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginRequest'
              - example:
                  email: test@gmail.com
                  password: '123456'
            example:
              email: test@gmail.com
              password: '123456'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /user/forgetPassword:
    post:
      tags:
      - User
      summary: Forget Password
      operationId: ForgetPassword
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ForgetPasswordRequest'
              - example:
                  email: mh3908334@gmail.com
            example:
              email: mh3908334@gmail.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /user/verifyResetCode:
    post:
      tags:
      - User
      summary: Verify Reset Code
      operationId: VerifyResetCode
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VerifyResetCodeRequest'
              - example:
                  email: mh3908334@gmail.com
                  resetCode: '573257'
            example:
              email: mh3908334@gmail.com
              resetCode: '573257'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /user/resetPassword:
    post:
      tags:
      - User
      summary: Reset Password
      operationId: ResetPassword
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ResetPasswordRequest'
              - example:
                  newPassword: '123456'
                  email: mh3908334@gmail.com
            example:
              newPassword: '123456'
              email: mh3908334@gmail.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /posts:
    post:
      tags:
      - Post
      summary: Add Post
      operationId: AddPost
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                text:
                  type: string
        required: false
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Post
      summary: Get All Posts
      operationId: GetAllPosts
      parameters:
      - name: limit
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 5
      - name: page
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 2
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /posts/{id}:
    patch:
      tags:
      - Post
      summary: Update Post
      operationId: UpdatePost
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              required:
              - image
              - text
              type: object
              properties:
                image:
                  type: string
                  format: binary
                text:
                  type: string
                  example: Test Up
        required: false
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Post
      summary: Get Specific Posts
      operationId: GetSpecificPosts
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Post
      summary: Delete Specific Posts
      operationId: DeleteSpecificPosts
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /posts/{id}/likes:
    post:
      tags:
      - Post
      summary: Add Like
      operationId: AddLike
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Post
      summary: Get All Likes
      operationId: GetAllLikes
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Post
      summary: Delete Like
      operationId: DeleteLike
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /posts/{id}/comments:
    post:
      tags:
      - Comment
      summary: Add Comment To Post
      operationId: AddCommentToPost
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddCommentToPostRequest'
              - example:
                  text: Test
            example:
              text: Test
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Comment
      summary: Get All Comment Of This Post
      operationId: GetAllCommentOfThisPost
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /posts/{id}/comments/{commentId}:
    patch:
      tags:
      - Comment
      summary: Update Specific Comment
      operationId: UpdateSpecificComment
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: commentId
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateSpecificCommentRequest'
              - example:
                  text: Test
            example:
              text: Test
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Comment
      summary: Update Specific Comment Copy
      operationId: UpdateSpecificCommentCopy
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: commentId
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    SignupRequest:
      title: SignupRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Test
        email: test@gmail.com
        password: '123456'
    LoginRequest:
      title: LoginRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: test@gmail.com
        password: '123456'
    ForgetPasswordRequest:
      title: ForgetPasswordRequest
      required:
      - email
      type: object
      properties:
        email:
          type: string
      example:
        email: mh3908334@gmail.com
    VerifyResetCodeRequest:
      title: VerifyResetCodeRequest
      required:
      - email
      - resetCode
      type: object
      properties:
        email:
          type: string
        resetCode:
          type: string
      example:
        email: mh3908334@gmail.com
        resetCode: '573257'
    ResetPasswordRequest:
      title: ResetPasswordRequest
      required:
      - newPassword
      - email
      type: object
      properties:
        newPassword:
          type: string
        email:
          type: string
      example:
        newPassword: '123456'
        email: mh3908334@gmail.com
    AddLinksOfVideosRequest:
      title: AddLinksOfVideosRequest
      required:
      - videos
      type: object
      properties:
        videos:
          type: array
          items:
            type: string
          description: ''
      example:
        videos:
        - Test 1
        - Test 2
        - Test 55
    RemoveLinkRequest:
      title: RemoveLinkRequest
      required:
      - link
      type: object
      properties:
        link:
          type: string
      example:
        link: Test4
    SignupAsAdminRequest:
      title: SignupAsAdminRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Admin
        email: admin@gmail.com
        password: '123456'
    RemoveCriminalDictionaryRequest:
      title: RemoveCriminalDictionaryRequest
      required:
      - link
      type: object
      properties:
        link:
          type: string
      example:
        link: Test 55
    AddCriminalDictionaryRequest:
      title: AddCriminalDictionaryRequest
      required:
      - title
      - decs
      type: object
      properties:
        title:
          type: string
        decs:
          type: string
      example:
        title: Test
        decs: ' Test Test Test Test Test Test Test Test Test '
    UpdateNewRequest:
      title: UpdateNewRequest
      required:
      - title
      type: object
      properties:
        title:
          type: string
      example:
        title: 'Test '
    RemoveSpecificQuestionRequest:
      title: RemoveSpecificQuestionRequest
      required:
      - title
      type: object
      properties:
        title:
          type: string
      example:
        title: Test 18
    AddOrderRequest:
      title: AddOrderRequest
      required:
      - reason
      - desc
      - phone
      - date
      type: object
      properties:
        reason:
          type: string
        desc:
          type: string
        phone:
          type: string
        date:
          type: string
      example:
        reason: Test
        desc: Test
        phone: '01544604708'
        date: 2012-7
    AddCommentToPostRequest:
      title: AddCommentToPostRequest
      required:
      - text
      type: object
      properties:
        text:
          type: string
      example:
        text: Test
    UpdateSpecificCommentRequest:
      title: UpdateSpecificCommentRequest
      required:
      - text
      type: object
      properties:
        text:
          type: string
      example:
        text: Test
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: User
- name: Post
- name: Comment